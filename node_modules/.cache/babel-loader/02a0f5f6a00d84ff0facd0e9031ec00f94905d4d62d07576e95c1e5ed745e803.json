{"ast":null,"code":"var _jsxFileName = \"/Users/tadashi_o/\\u3086\\u3046\\u305F/other/pagesTest/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Fonts from './resources/fonts.json';\nimport ConvertList from './resources/letter_convert_list.json';\nimport './App.css';\nimport FontButton from './components/FontButton';\nimport NotePreview from './components/NotePreview';\nimport { getPng, getYOffset } from './utils/EmojiRenderer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  /** 絵文字名変換表 */\n  const convertList = ConvertList;\n\n  /** 絵文字にする文字列 */\n  //const [text, setText] = useState('おふとん\\nかけてあげ\\nましょうね');\n  const [text, setText] = useState('てすと');\n\n  /** 選択中のフォント名 */\n  const [selectedFont, setSelectedFont] = useState(Fonts[0]);\n\n  /** 文字色 */\n  const [color, setColor] = useState('#000000');\n\n  /** 境界線色 */\n  const [borderColor, setBorderColor] = useState('#ffffff');\n\n  /** 色 */\n  const [borderWidth, setborderWidth] = useState(10);\n\n  /** 絵文字画像 */\n  const [png, setPng] = useState('');\n  useEffect(() => {\n    (async () => {\n      const yOffset = await getYOffset(selectedFont);\n      console.log(yOffset);\n      setPng(await getPng(text, selectedFont, color, yOffset, borderColor, borderWidth));\n    })();\n  }, [text, selectedFont, color]);\n\n  /**\n   * 最大級サーバー向け文字変換関数\n   */\n  const createEmojiName = () => {\n    let convertedText = text;\n\n    // 変換表に基づいて変換\n    Object.keys(convertList).forEach(letter => {\n      convertedText.replaceAll(letter, convertList[letter]);\n    });\n\n    // 長音記号は前の文字と一致させる\n    let i = 0;\n    while (convertedText.indexOf(\"ー\", i) > -1) {\n      const preLetter = convertedText[convertedText.indexOf(\"ー\", i) - 1];\n      console.log(preLetter);\n      convertedText = convertedText.replace(\"ー\", preLetter);\n      i++;\n    }\n  };\n  /**\n   * テキストエリア要素変更イベント\n   * @param e textarea要素変更イベント\n   */\n  const handleTextChange = async e => {\n    setText(e.target.value);\n  };\n\n  /**\n   * フォント選択ボタンクリックイベント\n   * @param e イベントハンドラ\n   */\n  const fontButtonOnClick = font => {\n    setSelectedFont(font);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: '15px 0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"emoji-preview\",\n        children: png && /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"result\",\n          src: png\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: [png && /*#__PURE__*/_jsxDEV(NotePreview, {\n        png: png\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), png && /*#__PURE__*/_jsxDEV(NotePreview, {\n        png: png,\n        dark: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        margin: '15px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"text\",\n        style: {\n          fontFamily: `${selectedFont.name}`\n        },\n        value: text,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FontButton, {\n        text: text,\n        fonts: Fonts,\n        onClick: fontButtonOnClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"Bh9WVKLNYunr74Q4mnp5te/G4to=\");\n_c = Main;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"preconnect\",\n      href: \"https://fonts.googleapis.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      href: `https://fonts.googleapis.com/css2?${Fonts.map(font => 'family=' + font.name.replaceAll(' ', '+')).join('&')}&display=swap`,\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"EGMi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '0.5em',\n          marginLeft: '1em'\n        },\n        children: \"- Emoji Generator for Misskey -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Fonts","ConvertList","FontButton","NotePreview","getPng","getYOffset","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","convertList","text","setText","selectedFont","setSelectedFont","color","setColor","borderColor","setBorderColor","borderWidth","setborderWidth","png","setPng","yOffset","console","log","createEmojiName","convertedText","Object","keys","forEach","letter","replaceAll","i","indexOf","preLetter","replace","handleTextChange","e","target","value","fontButtonOnClick","font","className","children","style","display","flexWrap","margin","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","width","dark","fontFamily","name","onChange","fonts","onClick","_c","App","rel","href","map","join","fontWeight","fontSize","marginLeft","_c2","$RefreshReg$"],"sources":["/Users/tadashi_o/ゆうた/other/pagesTest/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Fonts from './resources/fonts.json'\nimport ConvertList from './resources/letter_convert_list.json'\nimport './App.css';\nimport FontButton, { Font } from './components/FontButton';\nimport NotePreview from './components/NotePreview';\nimport { getPng, getYOffset } from './utils/EmojiRenderer';\n\nconst Main = () => {\n  /** 絵文字名変換表 */\n  const convertList: { [key: string]: string } = ConvertList;\n\n  /** 絵文字にする文字列 */\n  //const [text, setText] = useState('おふとん\\nかけてあげ\\nましょうね');\n  const [text, setText] = useState('てすと');\n\n  /** 選択中のフォント名 */\n  const [selectedFont, setSelectedFont] = useState(Fonts[0]);\n\n  /** 文字色 */\n  const [color, setColor] = useState('#000000');\n\n  /** 境界線色 */\n  const [borderColor, setBorderColor] = useState('#ffffff');\n\n  /** 色 */\n  const [borderWidth, setborderWidth] = useState(10);\n\n  /** 絵文字画像 */\n  const [png, setPng] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const yOffset = await getYOffset(selectedFont);\n      console.log(yOffset);\n      setPng(await getPng(text, selectedFont, color, yOffset, borderColor, borderWidth));\n    })();\n  }, [text, selectedFont, color]);\n\n  /**\n   * 最大級サーバー向け文字変換関数\n   */\n  const createEmojiName = () => {\n    let convertedText = text;\n\n    // 変換表に基づいて変換\n    Object.keys(convertList).forEach((letter: string) => {\n      convertedText.replaceAll(letter, convertList[letter]);\n    });\n\n    // 長音記号は前の文字と一致させる\n    let i = 0;\n    while (convertedText.indexOf(\"ー\", i) > -1) {\n      const preLetter = convertedText[convertedText.indexOf(\"ー\", i) - 1];\n      console.log(preLetter);\n      convertedText = convertedText.replace(\"ー\", preLetter);\n      i++;\n    }\n  }\n  /**\n   * テキストエリア要素変更イベント\n   * @param e textarea要素変更イベント\n   */\n  const handleTextChange = async (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  /**\n   * フォント選択ボタンクリックイベント\n   * @param e イベントハンドラ\n   */\n  const fontButtonOnClick = (font: Font) => {\n    setSelectedFont(font);\n  }\n\n  return (\n    <div className=\"App-header\">\n      <div style={{ display: 'flex', flexWrap: 'wrap', margin: '15px 0' }}>\n        {/* 画像プレビュー */}\n        <span className='emoji-preview'>\n          {png && <img alt=\"result\" src={png} />}\n        </span>\n      </div>\n      <div style={{ width: '100%', display: 'flex', flexWrap: 'wrap' }}>\n        {/* ノートプレビュー */}\n        {png && <NotePreview png={png} />}\n        {png && <NotePreview png={png} dark />}\n      </div>\n      <div style={{ display: 'flex', flexWrap: 'wrap', margin: '15px 0' }}>\n      {/* テキスト */}\n      <textarea className='text' style={{ fontFamily: `${selectedFont.name}` }} value={text} onChange={handleTextChange} />\n      { /* フォントボタン群 */}\n      <FontButton text={text} fonts={Fonts} onClick={fontButtonOnClick} />\n      </div>\n    </div>\n  );\n}\n\nconst App = () => {\n  return (\n    <>\n      {/* フォント読み込み */}\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link href={`https://fonts.googleapis.com/css2?${Fonts.map((font) => 'family=' + font.name.replaceAll(' ', '+')).join('&')}&display=swap`} rel=\"stylesheet\" />\n      <div className='title'><span style={{ fontWeight: 'bold' }}>EGMi</span>\n        <span style={{ fontSize: '0.5em', marginLeft: '1em' }}>- Emoji Generator for Misskey -</span>\n      </div>\n      <div className=\"main\">\n        <Main />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}