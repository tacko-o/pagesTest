{"ast":null,"code":"var _jsxFileName = \"/Volumes/EXTHDD/Macmini/misskey/emojiCreator/pagesTest/src/components/FontButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport EmojiPreviewBox from './EmojiPreviewBox';\n\n/** フォント情報 */\n\n/** FontButtonプロパティ */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FontButton = ({\n  text,\n  fonts,\n  onClick\n}) => {\n  _s();\n  /** 選択中フォント */\n  const [selectedFont, setSelectedFont] = useState({\n    displayName: '',\n    name: ''\n  });\n\n  /**\n   * ボタンクリックイベント\n   */\n  const buttonOnClick = font => {\n    setSelectedFont(font);\n    onClick(font);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font\",\n        children: fonts.map(font => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            name: font.name,\n            value: font.name,\n            onClick: buttonOnClick.bind(this, font),\n            disabled: selectedFont.name === font.name,\n            className: \"font-button\",\n            children: [/*#__PURE__*/_jsxDEV(EmojiPreviewBox, {\n              text: text !== \"\" ? text : \"おふとん\\nかけてあげ\\nましょうね\",\n              font: font,\n              color: \"#ff0000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-name\",\n              children: font.displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(FontButton, \"TEzQwp9dN4zoaWMbOeISqFkvcDs=\");\n_c = FontButton;\nexport default FontButton;\nvar _c;\n$RefreshReg$(_c, \"FontButton\");","map":{"version":3,"names":["React","useState","EmojiPreviewBox","jsxDEV","_jsxDEV","Fragment","_Fragment","FontButton","text","fonts","onClick","_s","selectedFont","setSelectedFont","displayName","name","buttonOnClick","font","children","className","map","value","bind","disabled","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Volumes/EXTHDD/Macmini/misskey/emojiCreator/pagesTest/src/components/FontButton.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport EmojiPreviewBox from './EmojiPreviewBox';\n\n/** フォント情報 */\nexport type Font = {\n  displayName: string,\n  name: string,\n};\n\n/** FontButtonプロパティ */\ntype FontButtonProps = {\n  text: string,\n  fonts: Font[],\n  onClick: (font: Font) => void,\n}\n\nconst FontButton = ({ text, fonts, onClick }: FontButtonProps) => {\n  /** 選択中フォント */\n  const [selectedFont, setSelectedFont] = useState({\n    displayName: '',\n    name: '',\n  });\n\n  /**\n   * ボタンクリックイベント\n   */\n  const buttonOnClick = (font: Font) => {\n    setSelectedFont(font);\n    onClick(font);\n  }\n\n  return (\n    <>\n      <div>\n        <span className='font'>\n          {\n            fonts.map((font) => {\n              return (\n                <button name={font.name} value={font.name} onClick={buttonOnClick.bind(this, font)} disabled={selectedFont.name === font.name} className='font-button'>\n                  <EmojiPreviewBox text={text !== \"\" ? text : \"おふとん\\nかけてあげ\\nましょうね\"} font={font} color='#ff0000' />\n                  <span className='font-name'>{font.displayName}</span>\n                </button>\n              );\n            })\n          }\n        </span>\n      </div>\n    </>\n  );\n}\n\nexport default FontButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;;AAMA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAOA,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAyB,CAAC,KAAK;EAAAC,EAAA;EAChE;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ca,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE;EACR,CAAC,CAAC;;EAEF;AACF;AACA;EACE,MAAMC,aAAa,GAAIC,IAAU,IAAK;IACpCJ,eAAe,CAACI,IAAI,CAAC;IACrBP,OAAO,CAACO,IAAI,CAAC;EACf,CAAC;EAED,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAAc,QAAA,eACEd,OAAA;QAAMe,SAAS,EAAC,MAAM;QAAAD,QAAA,EAElBT,KAAK,CAACW,GAAG,CAAEH,IAAI,IAAK;UAClB,oBACEb,OAAA;YAAQW,IAAI,EAAEE,IAAI,CAACF,IAAK;YAACM,KAAK,EAAEJ,IAAI,CAACF,IAAK;YAACL,OAAO,EAAEM,aAAa,CAACM,IAAI,CAAC,IAAI,EAAEL,IAAI,CAAE;YAACM,QAAQ,EAAEX,YAAY,CAACG,IAAI,KAAKE,IAAI,CAACF,IAAK;YAACI,SAAS,EAAC,aAAa;YAAAD,QAAA,gBACpJd,OAAA,CAACF,eAAe;cAACM,IAAI,EAAEA,IAAI,KAAK,EAAE,GAAGA,IAAI,GAAG,oBAAqB;cAACS,IAAI,EAAEA,IAAK;cAACO,KAAK,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAChGxB,OAAA;cAAMe,SAAS,EAAC,WAAW;cAAAD,QAAA,EAAED,IAAI,CAACH;YAAW;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC;QAEb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACN,CAAC;AAEP,CAAC;AAAAjB,EAAA,CAjCKJ,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}