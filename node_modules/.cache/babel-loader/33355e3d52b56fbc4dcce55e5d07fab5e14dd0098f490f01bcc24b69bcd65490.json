{"ast":null,"code":"import{useEffect,useState}from'react';import'./App.css';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const EmojiPreviewBox=_ref=>{let{text,font,color}=_ref;const[textLine,setTextLine]=useState(text.split('\\n'));/**\n   * テキスト更新処理\n   */useEffect(()=>{setTextLine(text.split('\\n'));if(textLine.some(line=>line.length>Number(process.env.REACT_APP_MAX_LETTERS_AT_LINE))){console.log(\"文字数超過テスト\");};},[text]);// , transform: `scale(${3 / line.length}, ${3 / textLine.length})`,\nreturn/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"span\",{style:{fontFamily:font.name},className:\"font-preview\",children:textLine.map((line,i)=>{return/*#__PURE__*/_jsx(\"div\",{className:\"font-preview-content\",style:{color:color,transform:`scale(${3/line.length}, ${3/textLine.length})`,lineHeight:`${3/textLine.length}em`},children:line},i);})})});};export default EmojiPreviewBox;","map":{"version":3,"names":["useEffect","useState","jsx","_jsx","Fragment","_Fragment","EmojiPreviewBox","_ref","text","font","color","textLine","setTextLine","split","some","line","length","Number","process","env","REACT_APP_MAX_LETTERS_AT_LINE","console","log","children","style","fontFamily","name","className","map","i","transform","lineHeight"],"sources":["/Volumes/EXTHDD/Macmini/misskey/emojiCreator/pagesTest/src/EmojiPreviewBox.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\ntype EmojiPreviewBoxProps = {\n  text: string,\n  font: {\n    displayName: string,\n    name: string,\n  }\n  color: string,\n}\nconst EmojiPreviewBox = ({ text, font, color }: EmojiPreviewBoxProps) => {\n\n\n  const [textLine, setTextLine] = useState(text.split('\\n'));\n\n  /**\n   * テキスト更新処理\n   */\n  useEffect(() => {\n    setTextLine(text.split('\\n'));\n\n    if (textLine.some((line) => line.length > Number(process.env.REACT_APP_MAX_LETTERS_AT_LINE))) {\n      console.log(\"文字数超過テスト\")\n    };\n  }, [text]);\n  // , transform: `scale(${3 / line.length}, ${3 / textLine.length})`,\n  return (\n    <>\n      <span style={{ fontFamily: font.name }} className='font-preview'>\n        {\n          textLine.map((line, i) => {\n            return <div key={i} className='font-preview-content' style={{ color: color, transform: `scale(${3 / line.length}, ${3 / textLine.length})`, lineHeight: `${3 / textLine.length}em` }}>{line}</div>\n          })\n        }\n      </span>\n    </>\n  );\n}\n\nexport default EmojiPreviewBox;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAUnB,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAiD,IAAhD,CAAEC,IAAI,CAAEC,IAAI,CAAEC,KAA4B,CAAC,CAAAH,IAAA,CAGlE,KAAM,CAACI,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAACO,IAAI,CAACK,KAAK,CAAC,IAAI,CAAC,CAAC,CAE1D;AACF;AACA,KACEb,SAAS,CAAC,IAAM,CACdY,WAAW,CAACJ,IAAI,CAACK,KAAK,CAAC,IAAI,CAAC,CAAC,CAE7B,GAAIF,QAAQ,CAACG,IAAI,CAAEC,IAAI,EAAKA,IAAI,CAACC,MAAM,CAAGC,MAAM,CAACC,OAAO,CAACC,GAAG,CAACC,6BAA6B,CAAC,CAAC,CAAE,CAC5FC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,CACzB,CAAC,CACH,CAAC,CAAE,CAACd,IAAI,CAAC,CAAC,CACV;AACA,mBACEL,IAAA,CAAAE,SAAA,EAAAkB,QAAA,cACEpB,IAAA,SAAMqB,KAAK,CAAE,CAAEC,UAAU,CAAEhB,IAAI,CAACiB,IAAK,CAAE,CAACC,SAAS,CAAC,cAAc,CAAAJ,QAAA,CAE5DZ,QAAQ,CAACiB,GAAG,CAAC,CAACb,IAAI,CAAEc,CAAC,GAAK,CACxB,mBAAO1B,IAAA,QAAawB,SAAS,CAAC,sBAAsB,CAACH,KAAK,CAAE,CAAEd,KAAK,CAAEA,KAAK,CAAEoB,SAAS,CAAE,SAAS,CAAC,CAAGf,IAAI,CAACC,MAAM,KAAK,CAAC,CAAGL,QAAQ,CAACK,MAAM,GAAG,CAAEe,UAAU,CAAE,GAAG,CAAC,CAAGpB,QAAQ,CAACK,MAAM,IAAK,CAAE,CAAAO,QAAA,CAAER,IAAI,EAA1Kc,CAAgL,CAAC,CACpM,CAAC,CAAC,CAEA,CAAC,CACP,CAAC,CAEP,CAAC,CAED,cAAe,CAAAvB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}