{"ast":null,"code":"var _jsxFileName = \"/Volumes/EXTHDD/Macmini/misskey/emojiCreator/pagesTest/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Fonts from './resource/fonts.json';\nimport ConvertList from './resource/letter_convert_list.json';\nimport './App.css';\nimport FontButton from './components/FontButton';\nimport ResultBox from './components/ResultBox';\n\n/**\n * 絵文字名変換表\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst convertList = ConvertList;\nconst Main = () => {\n  _s();\n  /** 絵文字にする文字列 */\n  const [text, setText] = useState('おふとん\\nかけてあげ\\nましょうね');\n\n  /**\n   * 選択中のフォント名\n   */\n  const [selectedFont, setSelectedFont] = useState(Fonts[0]);\n\n  /**\n   * 色\n   */\n  const [color, setColor] = useState('#000000');\n\n  /**\n   * 最大級サーバー向け文字変換関数\n   */\n  const createEmojiName = () => {\n    let convertedText = text;\n\n    // 変換表に基づいて変換\n    Object.keys(convertList).forEach(letter => {\n      convertedText.replaceAll(letter, convertList[letter]);\n    });\n\n    // 長音記号は前の文字と一致させる\n    let i = 0;\n    while (convertedText.indexOf(\"ー\", i) > -1) {\n      const preLetter = convertedText[convertedText.indexOf(\"ー\", i) - 1];\n      console.log(preLetter);\n      convertedText = convertedText.replace(\"ー\", preLetter);\n      i++;\n    }\n  };\n  /**\n   * テキストエリア要素変更イベント\n   * @param e textarea要素変更イベント\n   */\n  const handleTextChange = async e => {\n    setText(e.target.value);\n  };\n\n  /**\n   * フォント選択ボタンクリックイベント\n   * @param e イベントハンドラ\n   */\n  const fontButtonOnClick = font => {\n    setSelectedFont(font);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        style: {\n          fontFamily: selectedFont.name\n        },\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FontButton, {\n        text: text,\n        fonts: Fonts,\n        onClick: fontButtonOnClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ResultBox, {\n        text: text,\n        font: selectedFont,\n        color: '#000000'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"sqQux9PPDXyHiOy0WV+gM6fXGGE=\");\n_c = Main;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"preconnect\",\n      href: \"https://fonts.googleapis.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      href: `https://fonts.googleapis.com/css2?${Fonts.map(font => 'family=' + font.name.replaceAll(' ', '+')).join('&')}&display=swap`,\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Emoji Generator for Misskey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Fonts","ConvertList","FontButton","ResultBox","jsxDEV","_jsxDEV","Fragment","_Fragment","convertList","Main","_s","text","setText","selectedFont","setSelectedFont","color","setColor","createEmojiName","convertedText","Object","keys","forEach","letter","replaceAll","i","indexOf","preLetter","console","log","replace","handleTextChange","e","target","value","fontButtonOnClick","font","className","children","style","fontFamily","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","fonts","onClick","_c","App","rel","href","map","join","_c2","$RefreshReg$"],"sources":["/Volumes/EXTHDD/Macmini/misskey/emojiCreator/pagesTest/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOMServer from \"react-dom/server\";\nimport Fonts from './resource/fonts.json'\nimport ConvertList from './resource/letter_convert_list.json'\nimport './App.css';\nimport FontButton, { Font } from './components/FontButton';\nimport ResultBox from './components/ResultBox';\n\n/**\n * 絵文字名変換表\n */\nconst convertList: { [key: string]: string } = ConvertList;\n\nconst Main = () => {\n  /** 絵文字にする文字列 */\n  const [text, setText] = useState('おふとん\\nかけてあげ\\nましょうね');\n\n  /**\n   * 選択中のフォント名\n   */\n  const [selectedFont, setSelectedFont] = useState(Fonts[0]);\n\n  /**\n   * 色\n   */\n  const [color, setColor] = useState('#000000');\n\n  /**\n   * 最大級サーバー向け文字変換関数\n   */\n  const createEmojiName = () => {\n    let convertedText = text;\n\n    // 変換表に基づいて変換\n    Object.keys(convertList).forEach((letter: string) => {\n      convertedText.replaceAll(letter, convertList[letter]);\n    });\n\n    // 長音記号は前の文字と一致させる\n    let i = 0;\n    while (convertedText.indexOf(\"ー\", i) > -1) {\n      const preLetter = convertedText[convertedText.indexOf(\"ー\", i) - 1];\n      console.log(preLetter);\n      convertedText = convertedText.replace(\"ー\", preLetter);\n      i++;\n    }\n  }\n  /**\n   * テキストエリア要素変更イベント\n   * @param e textarea要素変更イベント\n   */\n  const handleTextChange = async (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  /**\n   * フォント選択ボタンクリックイベント\n   * @param e イベントハンドラ\n   */\n  const fontButtonOnClick = (font: Font) => {\n    setSelectedFont(font);\n  }\n\n  return (\n    <div className=\"App-header\">\n      <div>\n        {/* テキスト */}\n        <textarea value={text} style={{ fontFamily: selectedFont.name }} onChange={handleTextChange} />\n      </div>\n      <div>\n        { /* フォントボタン群 */}\n        <FontButton text={text} fonts={Fonts} onClick={fontButtonOnClick} />\n      </div>\n      <div>\n        {/* プレビュー */}\n        <ResultBox text={text} font={selectedFont} color={'#000000'} />\n      </div>\n    </div>\n  );\n}\n\nconst App = () => {\n  return (\n    <>\n      {/* フォント読み込み */}\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link href={`https://fonts.googleapis.com/css2?${Fonts.map((font) => 'family=' + font.name.replaceAll(' ', '+')).join('&')}&display=swap`} rel=\"stylesheet\" />\n      <h1>Emoji Generator for Misskey</h1>\n      <div className=\"main\">\n        <Main />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}