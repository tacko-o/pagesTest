{"ast":null,"code":"var _jsxFileName = \"/Users/tadashi_o/\\u3086\\u3046\\u305F/other/pagesTest/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Fonts from './fonts.json';\nimport './App.css';\n\n/**\n * 読み込むフォント\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fontList = Fonts;\nconst Main = () => {\n  _s();\n  var _fontList$filter;\n  const [font, setFont] = useState({\n    text: '',\n    name: '',\n    style: []\n  });\n\n  /**\n   * フォントselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleFontChange = e => {\n    const index = Number(e.target.value);\n    setFontIndex(index);\n    setStyleIndex(0);\n  };\n\n  /**\n   * スタイルselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleStyleChange = e => {\n    const index = Number(e.target.value);\n    setStyleIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: font.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"name\",\n          value: font.name,\n          onChange: handleFontChange,\n          children: fontList.map((f, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: f.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"style\",\n          value: font.style,\n          onChange: handleStyleChange,\n          children: ((_fontList$filter = fontList.filter(f => {\n            f.name == font.name;\n          })) !== null && _fontList$filter !== void 0 ? _fontList$filter : []).map((f, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: f.style[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"I/1t8p1CoJSUvCdF1dOr+fBxQbA=\");\n_c = Main;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Fonts","jsxDEV","_jsxDEV","fontList","Main","_s","_fontList$filter","font","setFont","text","name","style","handleFontChange","e","index","Number","target","value","setFontIndex","setStyleIndex","handleStyleChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","f","i","filter","_c","App","_c2","$RefreshReg$"],"sources":["/Users/tadashi_o/ゆうた/other/pagesTest/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Fonts from './fonts.json'\nimport './App.css';\n\n/**\n * 読み込むフォント\n */\nconst fontList = Fonts;\n\nconst Main = () => {\n  const [font, setFont] = useState({\n    text: '',\n    name: '',\n    style: [] as string[],\n  });\n\n  /**\n   * フォントselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleFontChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const index = Number(e.target.value);\n    setFontIndex(index);\n    setStyleIndex(0);\n  };\n\n  /**\n   * スタイルselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleStyleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const index = Number(e.target.value)\n    setStyleIndex(index);\n  };\n\n  return (\n    <div className=\"App-header\">\n      <div>\n        {/* テキスト */}\n        <textarea value={font.text} />\n      </div>\n      <div>\n      <span className='font'>\n        {/* フォント名 */}\n        <select name='name' value={font.name} onChange={handleFontChange}>\n          {\n            fontList.map((f, i) => {\n              return (<option>{f.name}</option>)\n            })\n          }\n        </select>\n      &nbsp;\n      {/* フォントスタイル */}\n        <select name='style' value={font.style} onChange={handleStyleChange}>\n          {\n            (fontList.filter((f) => {f.name == font.name}) ?? []).map((f, i) => {\n              return (<option>{f.style[i]}</option>)\n            })\n          }\n        </select>\n      </span>\n    </div>\n    </div>\n  );\n}\n\nconst App = () => {\n  return (\n    <div className=\"main\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}