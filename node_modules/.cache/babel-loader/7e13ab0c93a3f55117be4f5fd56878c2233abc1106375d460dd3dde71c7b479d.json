{"ast":null,"code":"var _jsxFileName = \"/Users/tadashi_o/\\u3086\\u3046\\u305F/other/pagesTest/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Fonts from './fonts.json';\nimport ConvertList from './letter_convert_list.json';\nimport './App.css';\n\n/**\n * 読み込むフォントリスト\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fontList = Fonts;\nconst convertList = ConvertList;\nconst Main = () => {\n  _s();\n  /** 絵文字にする文字列 */\n  const [text, setText] = useState('');\n\n  /** フォント名 */\n  const [fontName, setFontName] = useState(fontList[0] !== undefined ? fontList[0].name : '');\n  useEffect(() => {}, [fontName]);\n\n  /**\n   * テキストエリア要素変更イベント\n   * @param e textarea要素変更イベント\n   */\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        style: {\n          fontFamily: fontName\n        },\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font\",\n        children: /* フォント名 */\n        Fonts.map(font => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            name: font.name,\n            value: font.name,\n            style: {\n              fontFamily: font.name\n            },\n            onClick: () => {\n              setFontName(font.name);\n            },\n            children: font.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"8u+JmXIC8GRRMTjlMHkGnHEv02Q=\");\n_c = Main;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"preconnect\",\n      href: \"https://fonts.googleapis.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      href: `https://fonts.googleapis.com/css2?${Fonts.map(font => 'family=' + font.name.replaceAll(' ', '+')).join('&')}&display=swap`,\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Fonts","ConvertList","jsxDEV","_jsxDEV","Fragment","_Fragment","fontList","convertList","Main","_s","text","setText","fontName","setFontName","undefined","name","handleTextChange","e","target","value","className","children","style","fontFamily","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","font","onClick","displayName","_c","App","rel","href","replaceAll","join","_c2","$RefreshReg$"],"sources":["/Users/tadashi_o/ゆうた/other/pagesTest/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Fonts from './fonts.json'\nimport ConvertList from './letter_convert_list.json'\nimport './App.css';\n\n/**\n * 読み込むフォントリスト\n */\nconst fontList = Fonts;\n\nconst convertList = ConvertList;\n\nconst Main = () => {\n  /** 絵文字にする文字列 */\n  const [text, setText] = useState('');\n\n  /** フォント名 */\n  const [fontName, setFontName] = useState(fontList[0] !== undefined ? fontList[0].name : '');\n\n  useEffect(() => {\n\n  }, [fontName]);\n\n  /**\n   * テキストエリア要素変更イベント\n   * @param e textarea要素変更イベント\n   */\n  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <div className=\"App-header\">\n      <div>\n        {/* テキスト */}\n        <textarea value={text} style={{fontFamily: fontName}} onChange={handleTextChange} />\n      </div>\n      <div>\n        <span className='font'>\n          {\n            /* フォント名 */\n            Fonts.map((font) => {\n              return <button name={font.name} value={font.name} style={{fontFamily: font.name}} onClick={() => { setFontName(font.name) }}>{font.displayName}</button>\n            })\n          }\n        </span>\n      </div>\n    </div>\n  );\n}\n\nconst App = () => {\n  return (\n    <>\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link href={`https://fonts.googleapis.com/css2?${Fonts.map((font) => 'family=' + font.name.replaceAll(' ', '+')).join('&')}&display=swap`} rel=\"stylesheet\" />\n      <div className=\"main\">\n        <Main />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}