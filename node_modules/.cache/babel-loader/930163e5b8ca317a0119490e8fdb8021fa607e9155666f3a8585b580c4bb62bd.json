{"ast":null,"code":"var _jsxFileName = \"/Users/tadashi_o/\\u3086\\u3046\\u305F/other/pagesTest/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Fonts from './fonts.json';\nimport ConvertList from './letter_convert_list.json';\nimport './App.css';\n\n/**\n * 読み込むフォントリスト\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fontList = Fonts;\nconst convertList = ConvertList;\nconst Main = () => {\n  _s();\n  /** 絵文字にする文字列 */\n  const [text, setText] = useState('');\n\n  /** フォント名 */\n  const [fontName, setFontName] = useState(fontList[0] !== undefined ? fontList[0].name : '');\n  const createEmojiName = () => {\n    Object.keys(convertList).forEach(letter => {\n      text.replaceAll(letter, convertList[letter]);\n    });\n  };\n  /**\n   * テキストエリア要素変更イベント\n   * @param e textarea要素変更イベント\n   */\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        style: {\n          fontFamily: fontName\n        },\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font\",\n        children: /* フォント名 */\n        Fonts.map(font => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            name: font.name,\n            value: font.name,\n            style: {\n              fontFamily: font.name\n            },\n            onClick: () => {\n              setFontName(font.name);\n            },\n            children: font.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"pwtnqgyGRbDdwoLLYP1akqgEigY=\");\n_c = Main;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"preconnect\",\n      href: \"https://fonts.googleapis.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      href: `https://fonts.googleapis.com/css2?${Fonts.map(font => 'family=' + font.name.replaceAll(' ', '+')).join('&')}&display=swap`,\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Fonts","ConvertList","jsxDEV","_jsxDEV","Fragment","_Fragment","fontList","convertList","Main","_s","text","setText","fontName","setFontName","undefined","name","createEmojiName","Object","keys","forEach","letter","replaceAll","handleTextChange","e","target","value","className","children","style","fontFamily","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","font","onClick","displayName","_c","App","rel","href","join","_c2","$RefreshReg$"],"sources":["/Users/tadashi_o/ゆうた/other/pagesTest/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Fonts from './fonts.json'\nimport ConvertList from './letter_convert_list.json'\nimport './App.css';\n\n/**\n * 読み込むフォントリスト\n */\nconst fontList = Fonts;\n\nconst convertList = ConvertList;\n\nconst Main = () => {\n  /** 絵文字にする文字列 */\n  const [text, setText] = useState('');\n\n  /** フォント名 */\n  const [fontName, setFontName] = useState(fontList[0] !== undefined ? fontList[0].name : '');\n\n  const createEmojiName = () => {\n    Object.keys(convertList).forEach((letter) => {\n      text.replaceAll(letter, convertList[letter] as string);\n    }); \n  }\n  /**\n   * テキストエリア要素変更イベント\n   * @param e textarea要素変更イベント\n   */\n  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <div className=\"App-header\">\n      <div>\n        {/* テキスト */}\n        <textarea value={text} style={{fontFamily: fontName}} onChange={handleTextChange} />\n      </div>\n      <div>\n        <span className='font'>\n          {\n            /* フォント名 */\n            Fonts.map((font) => {\n              return <button name={font.name} value={font.name} style={{fontFamily: font.name}} onClick={() => { setFontName(font.name) }}>{font.displayName}</button>\n            })\n          }\n        </span>\n      </div>\n    </div>\n  );\n}\n\nconst App = () => {\n  return (\n    <>\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link href={`https://fonts.googleapis.com/css2?${Fonts.map((font) => 'family=' + font.name.replaceAll(' ', '+')).join('&')}&display=swap`} rel=\"stylesheet\" />\n      <div className=\"main\">\n        <Main />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}