{"ast":null,"code":"var _jsxFileName = \"/Users/tadashi_o/\\u3086\\u3046\\u305F/other/pagesTest/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Fonts from './fonts.json';\nimport './App.css';\n\n/**\n * 読み込むフォント\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fontList = Fonts;\nconst Main = () => {\n  _s();\n  var _fontList$filter;\n  /** 絵文字にする文字列 */\n  const [text, setText] = useState('');\n\n  /** フォント名 */\n  const [name, setName] = useState('');\n\n  /** フォントスタイル */\n  const [style, setStyle] = useState('');\n\n  /** フォントスタイル候補 */\n  const [styleList, setStyleList] = useState([]);\n\n  /**\n   * フォントselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleFontChange = e => {\n    setName(e.target.value);\n  };\n  useEffect(() => {\n    var _fontList$find, _styleList$;\n    const styleList = ((_fontList$find = fontList.find(f => {\n      f.name === name;\n    })) !== null && _fontList$find !== void 0 ? _fontList$find : {\n      style: []\n    }).style;\n    setStyleList(styleList);\n    setStyle((_styleList$ = styleList[0]) !== null && _styleList$ !== void 0 ? _styleList$ : '');\n  }, [name]);\n\n  /**\n   * スタイルselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleStyleChange = e => {\n    setStyle(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: font.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"name\",\n          value: font.name,\n          onChange: handleFontChange,\n          children: fontList.map((f, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: f.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"style\",\n          value: font.style,\n          onChange: handleStyleChange,\n          children: ((_fontList$filter = fontList.filter(f => {\n            f.name == font.name;\n          })) !== null && _fontList$filter !== void 0 ? _fontList$filter : []).map((f, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: f.style[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"wk9vQIophqbLzrgK/+LJ5zEw1sU=\");\n_c = Main;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Fonts","jsxDEV","_jsxDEV","fontList","Main","_s","_fontList$filter","text","setText","name","setName","style","setStyle","styleList","setStyleList","handleFontChange","e","target","value","_fontList$find","_styleList$","find","f","handleStyleChange","className","children","font","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","i","filter","_c","App","_c2","$RefreshReg$"],"sources":["/Users/tadashi_o/ゆうた/other/pagesTest/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Fonts from './fonts.json'\nimport './App.css';\n\n/**\n * 読み込むフォント\n */\nconst fontList = Fonts;\n\nconst Main = () => {\n  /** 絵文字にする文字列 */\n  const [text, setText] = useState('');\n\n  /** フォント名 */\n  const [name, setName] = useState('');\n\n  /** フォントスタイル */\n  const [style, setStyle] = useState('');\n\n  /** フォントスタイル候補 */\n  const [styleList, setStyleList] = useState([] as string[]);\n\n  /**\n   * フォントselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleFontChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setName(e.target.value);\n  };\n\n  useEffect(() => {\n    const styleList = (fontList.find((f) => { f.name === name }) ?? {style: []}).style;\n    setStyleList(styleList);\n    setStyle(styleList[0] ?? '');\n  }, [name]);\n\n  /**\n   * スタイルselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleStyleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setStyle(e.target.value);\n  };\n\n  return (\n    <div className=\"App-header\">\n      <div>\n        {/* テキスト */}\n        <textarea value={font.text} />\n      </div>\n      <div>\n        <span className='font'>\n          {/* フォント名 */}\n          <select name='name' value={font.name} onChange={handleFontChange}>\n            {\n              fontList.map((f, i) => {\n                return (<option>{f.name}</option>)\n              })\n            }\n          </select>\n          &nbsp;\n          {/* フォントスタイル */}\n          <select name='style' value={font.style} onChange={handleStyleChange}>\n            {\n              (fontList.filter((f) => { f.name == font.name }) ?? []).map((f, i) => {\n                return (<option>{f.style[i]}</option>)\n              })\n            }\n          </select>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nconst App = () => {\n  return (\n    <div className=\"main\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}