{"ast":null,"code":"var _jsxFileName = \"/Users/tadashi_o/\\u3086\\u3046\\u305F/other/pagesTest/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Fonts from './fonts.json';\nimport './App.css';\n\n/**\n * 読み込むフォント\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fontList = Fonts;\nconst Main = () => {\n  _s();\n  var _fontList$filter;\n  const [font, setFont] = useState({\n    name: ''\n  });\n\n  /** フォント名 */\n  const [name, setName] = useState('');\n\n  /** フォントスタイル */\n  const [style, setStyle] = useState('');\n\n  /** フォントスタイル候補 */\n  const [styleList, setStyleList] = useState([]);\n\n  /**\n   * フォントselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleFontChange = e => {\n    setFont(f => ({\n      ...f,\n      name: e.target.value\n    }));\n  };\n\n  /**\n   * スタイルselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleStyleChange = e => {\n    const index = Number(e.target.value);\n    setStyleIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: font.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"name\",\n          value: font.name,\n          onChange: handleFontChange,\n          children: fontList.map((f, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: f.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"style\",\n          value: font.style,\n          onChange: handleStyleChange,\n          children: ((_fontList$filter = fontList.filter(f => {\n            f.name == font.name;\n          })) !== null && _fontList$filter !== void 0 ? _fontList$filter : []).map((f, i) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              children: f.style[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"rGT0YlUmnEwE6eMNK/xSncF6vZc=\");\n_c = Main;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Fonts","jsxDEV","_jsxDEV","fontList","Main","_s","_fontList$filter","font","setFont","name","setName","style","setStyle","styleList","setStyleList","handleFontChange","e","f","target","value","handleStyleChange","index","Number","setStyleIndex","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","i","filter","_c","App","_c2","$RefreshReg$"],"sources":["/Users/tadashi_o/ゆうた/other/pagesTest/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Fonts from './fonts.json'\nimport './App.css';\n\n/**\n * 読み込むフォント\n */\nconst fontList = Fonts;\n\nconst Main = () => {\n  const [font, setFont] = useState({\n    name: '',\n  });\n\n  /** フォント名 */\n  const [name, setName] = useState('');\n\n  /** フォントスタイル */\n  const [style, setStyle] = useState('');\n\n  /** フォントスタイル候補 */\n  const [styleList, setStyleList] = useState([] as string[]);\n\n  /**\n   * フォントselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleFontChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setFont((f) => ({\n      ...f,\n      name: e.target.value,\n    }));\n  };\n\n  /**\n   * スタイルselect要素変更イベント\n   * @param e select要素変更イベント\n   */\n  const handleStyleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const index = Number(e.target.value)\n    setStyleIndex(index);\n  };\n\n  return (\n    <div className=\"App-header\">\n      <div>\n        {/* テキスト */}\n        <textarea value={font.text} />\n      </div>\n      <div>\n        <span className='font'>\n          {/* フォント名 */}\n          <select name='name' value={font.name} onChange={handleFontChange}>\n            {\n              fontList.map((f, i) => {\n                return (<option>{f.name}</option>)\n              })\n            }\n          </select>\n          &nbsp;\n          {/* フォントスタイル */}\n          <select name='style' value={font.style} onChange={handleStyleChange}>\n            {\n              (fontList.filter((f) => { f.name == font.name }) ?? []).map((f, i) => {\n                return (<option>{f.style[i]}</option>)\n              })\n            }\n          </select>\n        </span>\n      </div>\n    </div>\n  );\n}\n\nconst App = () => {\n  return (\n    <div className=\"main\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}