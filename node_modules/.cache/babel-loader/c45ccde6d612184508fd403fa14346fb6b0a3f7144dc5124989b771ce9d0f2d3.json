{"ast":null,"code":"var _jsxFileName = \"/Volumes/EXTHDD/Macmini/misskey/emojiCreator/pagesTest/src/FontButton.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FontButton = ({\n  text,\n  font,\n  pressed,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"fontName\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          name: font.name,\n          value: font.name,\n          onClick: onClick,\n          disabled: pressed,\n          className: \"font-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontFamily: font.name\n            },\n            children: text.replaceAll('\\n', '<br />')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), font.displayName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = FontButton;\nexport default FontButton;\nvar _c;\n$RefreshReg$(_c, \"FontButton\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","FontButton","text","font","pressed","onClick","children","className","name","value","disabled","style","fontFamily","replaceAll","fileName","_jsxFileName","lineNumber","columnNumber","displayName","_c","$RefreshReg$"],"sources":["/Volumes/EXTHDD/Macmini/misskey/emojiCreator/pagesTest/src/FontButton.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\ntype FontButtonProps = {\n  text: string,\n  font: {\n    displayName: string,\n    name: string,\n  }\n  pressed: boolean,\n  onClick: React.MouseEventHandler<HTMLButtonElement>\n}\n\nconst FontButton = ({ text, font, pressed, onClick }: FontButtonProps) => {\n  return (\n    <>\n      <div>\n        <span className='fontName'>\n          <button name={font.name} value={font.name} onClick={onClick} disabled={pressed} className='font-button'>\n            <div style={{fontFamily: font.name}}>{text.replaceAll('\\n', '<br />')}</div>\n            {font.displayName}\n          </button>\n        </span>\n      </div>\n    </>\n  );\n}\n\nexport default FontButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAA+B,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAYnB,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAyB,CAAC,KAAK;EACxE,oBACEP,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA;MAAAQ,QAAA,eACER,OAAA;QAAMS,SAAS,EAAC,UAAU;QAAAD,QAAA,eACxBR,OAAA;UAAQU,IAAI,EAAEL,IAAI,CAACK,IAAK;UAACC,KAAK,EAAEN,IAAI,CAACK,IAAK;UAACH,OAAO,EAAEA,OAAQ;UAACK,QAAQ,EAAEN,OAAQ;UAACG,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACrGR,OAAA;YAAKa,KAAK,EAAE;cAACC,UAAU,EAAET,IAAI,CAACK;YAAI,CAAE;YAAAF,QAAA,EAAEJ,IAAI,CAACW,UAAU,CAAC,IAAI,EAAE,QAAQ;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAC3Ed,IAAI,CAACe,WAAW;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC,gBACN,CAAC;AAEP,CAAC;AAAAE,EAAA,GAbKlB,UAAU;AAehB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}