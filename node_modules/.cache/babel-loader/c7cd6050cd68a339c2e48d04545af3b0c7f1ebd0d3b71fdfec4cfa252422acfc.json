{"ast":null,"code":"var _jsxFileName = \"/Volumes/EXTHDD/Macmini/misskey/emojiCreator/pagesTest/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOMServer from \"react-dom/server\";\nimport Fonts from './resource/fonts.json';\nimport ConvertList from './resource/letter_convert_list.json';\nimport './App.css';\nimport FontButton from './FontButton';\nimport EmojiPreviewBox from './EmojiPreviewBox';\n\n/**\n * 絵文字名変換表\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst convertList = ConvertList;\nconst Main = () => {\n  _s();\n  /** 絵文字にする文字列 */\n  const [text, setText] = useState('');\n\n  /**\n   * 選択中のフォント名\n   */\n  const [selectedFont, setSelectedFont] = useState({\n    displayName: '',\n    name: ''\n  });\n\n  /**\n   * 最大級サーバー向け文字変換関数\n   */\n  const createEmojiName = () => {\n    let convertedText = text;\n\n    // 変換表に基づいて変換\n    Object.keys(convertList).forEach(letter => {\n      convertedText.replaceAll(letter, convertList[letter]);\n    });\n\n    // 長音記号は前の文字と一致させる\n    let i = 0;\n    while (convertedText.indexOf(\"ー\", i) > -1) {\n      const preLetter = convertedText[convertedText.indexOf(\"ー\", i) - 1];\n      console.log(preLetter);\n      convertedText = convertedText.replace(\"ー\", preLetter);\n      i++;\n    }\n  };\n  const createForeignObject = (width, height, content) => {\n    const g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    const sw = document.createElementNS(\"http://www.w3.org/2000/svg\", \"switch\");\n\n    // foreignObjectを作成\n    const foreignObject = document.createElementNS(\"http://www.w3.org/2000/svg\", \"foreignObject\");\n    foreignObject.setAttribute(\"width\", width.toString());\n    foreignObject.setAttribute(\"height\", height.toString());\n    foreignObject.setAttribute(\"requiredExtensions\", \"http://www.w3.org/1999/xhtml\");\n    const div = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"div\");\n    div.setAttribute(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n    div.setAttribute(\"style\", \"padding: 8px\"); // contentの影を表示させる為に少しpadding設定\n    div.innerHTML = content;\n\n    // foreignObjectがサポートされてない場合に以下のtextが表示される\n    const fallthrough = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n    fallthrough.setAttribute(\"x\", \"0\");\n    fallthrough.setAttribute(\"y\", \"10\");\n    fallthrough.setAttribute(\"font-size\", \"10\");\n    fallthrough.setAttribute(\"fill\", \"red\");\n    fallthrough.textContent = \"failed to generate svg\";\n    foreignObject.appendChild(div);\n    sw.appendChild(foreignObject);\n    sw.appendChild(fallthrough);\n    g.appendChild(sw);\n    return g;\n  };\n\n  /**\n   * テキストエリア要素変更イベント\n   * @param e textarea要素変更イベント\n   */\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        const result = ReactDOMServer.renderToStaticMarkup(/*#__PURE__*/_jsxDEV(EmojiPreviewBox, {\n          text: text,\n          font: selectedFont,\n          color: \"#ff0000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 62\n        }, this));\n        setElement(result);\n      },\n      children: \"Convert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        style: {\n          fontFamily: selectedFont.name\n        },\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font\",\n        children: /* フォントボタン */\n        Fonts.map(font => {\n          return /*#__PURE__*/_jsxDEV(FontButton, {\n            text: text,\n            font: font,\n            pressed: selectedFont.name === font.name,\n            onClick: () => {\n              setSelectedFont(font);\n            }\n          }, font.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"uoahagTjXhZ7Q2mpSEdB8kEloDg=\");\n_c = Main;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"preconnect\",\n      href: \"https://fonts.googleapis.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      href: `https://fonts.googleapis.com/css2?${Fonts.map(font => 'family=' + font.name.replaceAll(' ', '+')).join('&')}&display=swap`,\n      rel: \"stylesheet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","ReactDOMServer","Fonts","ConvertList","FontButton","EmojiPreviewBox","jsxDEV","_jsxDEV","Fragment","_Fragment","convertList","Main","_s","text","setText","selectedFont","setSelectedFont","displayName","name","createEmojiName","convertedText","Object","keys","forEach","letter","replaceAll","i","indexOf","preLetter","console","log","replace","createForeignObject","width","height","content","g","document","createElementNS","sw","foreignObject","setAttribute","toString","div","innerHTML","fallthrough","textContent","appendChild","handleTextChange","e","target","value","className","children","onClick","result","renderToStaticMarkup","font","color","fileName","_jsxFileName","lineNumber","columnNumber","setElement","style","fontFamily","onChange","map","pressed","_c","App","rel","href","join","_c2","$RefreshReg$"],"sources":["/Volumes/EXTHDD/Macmini/misskey/emojiCreator/pagesTest/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOMServer from \"react-dom/server\";\nimport Fonts from './resource/fonts.json'\nimport ConvertList from './resource/letter_convert_list.json'\nimport './App.css';\nimport FontButton from './FontButton';\nimport EmojiPreviewBox from './EmojiPreviewBox';\n\n/**\n * 絵文字名変換表\n */\nconst convertList: { [key: string]: string } = ConvertList;\n\nconst Main = () => {\n  /** 絵文字にする文字列 */\n  const [text, setText] = useState('');\n\n/**\n * 選択中のフォント名\n */\n  const [selectedFont, setSelectedFont] = useState({\n    displayName: '',\n    name: '',\n  });\n\n  /**\n   * 最大級サーバー向け文字変換関数\n   */\n  const createEmojiName = () => {\n    let convertedText = text;\n\n    // 変換表に基づいて変換\n    Object.keys(convertList).forEach((letter: string) => {\n      convertedText.replaceAll(letter, convertList[letter]);\n    });\n\n    // 長音記号は前の文字と一致させる\n    let i = 0;\n    while (convertedText.indexOf(\"ー\", i) > -1) {\n      const preLetter = convertedText[convertedText.indexOf(\"ー\", i) - 1];\n      console.log(preLetter);\n      convertedText = convertedText.replace(\"ー\", preLetter);\n      i++;\n    }\n  }\n\n  const createForeignObject = (width: number, height: number, content: string) => {\n    const g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    const sw = document.createElementNS(\"http://www.w3.org/2000/svg\", \"switch\");\n  \n    // foreignObjectを作成\n    const foreignObject = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"foreignObject\"\n    );\n    foreignObject.setAttribute(\"width\", width.toString());\n    foreignObject.setAttribute(\"height\", height.toString());\n    foreignObject.setAttribute(\n      \"requiredExtensions\",\n      \"http://www.w3.org/1999/xhtml\"\n    );\n  \n    const div = document.createElementNS(\"http://www.w3.org/1999/xhtml\", \"div\");\n    div.setAttribute(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n    div.setAttribute(\"style\", \"padding: 8px\"); // contentの影を表示させる為に少しpadding設定\n    div.innerHTML = content;\n  \n    // foreignObjectがサポートされてない場合に以下のtextが表示される\n    const fallthrough = document.createElementNS(\n      \"http://www.w3.org/2000/svg\",\n      \"text\"\n    );\n    fallthrough.setAttribute(\"x\", \"0\");\n    fallthrough.setAttribute(\"y\", \"10\");\n    fallthrough.setAttribute(\"font-size\", \"10\");\n    fallthrough.setAttribute(\"fill\", \"red\");\n    fallthrough.textContent = \"failed to generate svg\";\n  \n    foreignObject.appendChild(div);\n    sw.appendChild(foreignObject);\n    sw.appendChild(fallthrough);\n    g.appendChild(sw);\n    return g;\n  };\n\n  /**\n   * テキストエリア要素変更イベント\n   * @param e textarea要素変更イベント\n   */\n  const handleTextChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <div className=\"App-header\">\n            <button\n        onClick={() => {\n          const result = ReactDOMServer.renderToStaticMarkup(<EmojiPreviewBox text={text} font={selectedFont} color='#ff0000'/>);\n          setElement(result);\n        }}\n      >\n        Convert\n      </button>\n      \n      <div>\n        {/* テキスト */}\n        <textarea value={text} style={{ fontFamily: selectedFont.name }} onChange={handleTextChange} />\n      </div>\n      <div>\n        <span className='font'>\n          {\n            /* フォントボタン */\n            Fonts.map((font) => {\n              return <FontButton key={font.name} text={text} font={font} pressed={selectedFont.name === font.name} onClick={() => { setSelectedFont(font); }} />\n            })\n          }\n        </span>\n      </div>\n    </div>\n  );\n}\n\nconst App = () => {\n  return (\n    <>\n      {/* フォント読み込み */}\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n      <link href={`https://fonts.googleapis.com/css2?${Fonts.map((font) => 'family=' + font.name.replaceAll(' ', '+')).join('&')}&display=swap`} rel=\"stylesheet\" />\n      <div className=\"main\">\n        <Main />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}