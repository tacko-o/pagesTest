{"ast":null,"code":"import '../App.css';\n/**\n * プレビュー用canvas描画\n */\nexport async function getPng(text, font, color, yOffset, borderColor, borderWidth) {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const canvas = document.createElement('canvas');\n      canvas.width = 128;\n      canvas.height = 128;\n      const textLine = text.split('\\n');\n      const fontSize = canvas.width / textLine.length;\n      const ctx = canvas.getContext('2d');\n      ctx.fillStyle = color;\n      ctx.strokeStyle = borderColor;\n      ctx.lineWidth = borderWidth;\n      ctx.lineJoin = 'round';\n      ctx.textBaseline = 'top';\n      ctx.font = `${fontSize}px '${font.name}', serif`;\n\n      // stroke\n      if (borderWidth > 0) {\n        textLine.forEach((line, i) => {\n          ctx.save();\n          //const lineWidth = ctx.measureText(line).width;\n          ctx.strokeText(line, canvas.width * 0.05, fontSize * 0.9 * i + fontSize * 0.05 + yOffset, canvas.width * 0.9);\n          ctx.restore();\n        });\n      }\n\n      // fill\n      textLine.forEach((line, i) => {\n        ctx.save();\n        ctx.fillText(line, canvas.width * 0.05, fontSize * 0.92 * i + fontSize * 0.05 + yOffset, canvas.width * 0.9);\n        ctx.restore();\n      });\n      resolve(canvas.toDataURL());\n    } catch (e) {\n      reject();\n    }\n  });\n}\n\n/**\n * Y軸オフセットを返す。\n * ブラウザによってy軸方向の描画がずれてるので計算する\n * @param canvas 絵文字が描画されたキャンバス\n * @returns Yオフセット\n */\nexport function getYOffset(font) {\n  try {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const ctx = canvas.getContext('2d');\n    ctx.textBaseline = 'top';\n    ctx.font = `128px '${font.name}', serif`;\n\n    // fill\n    ctx.fillText(\"F\", 0, 0);\n    const data = ctx.getImageData(0, 0, canvas.width, canvas.height).data;\n    for (var i = 0; i < data.length; i += 4) {\n      // データ4つでrgba 1px分\n      // 一番上の行から走査して最初に0以上の値が出てきたピクセルを確保\n      if (data[i] !== 0 || data[i + 1] !== 0 || data[i + 2] !== 0 || data[i + 3] !== 0) {\n        console.log(data[i], data[i + 1], data[i + 2], data[i + 3]);\n        break;\n      }\n    }\n    i++;\n\n    // 一番上の行を計算\n    const yOffset = Math.floor(canvas.width / Math.floor(i / 4));\n    console.log(yOffset);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n\n    //return -yOffset;\n\n    return canvas.toDataURL();\n  } catch (e) {\n    throw e;\n  }\n}","map":{"version":3,"names":["getPng","text","font","color","yOffset","borderColor","borderWidth","Promise","resolve","reject","canvas","document","createElement","width","height","textLine","split","fontSize","length","ctx","getContext","fillStyle","strokeStyle","lineWidth","lineJoin","textBaseline","name","forEach","line","i","save","strokeText","restore","fillText","toDataURL","e","getYOffset","data","getImageData","console","log","Math","floor","clearRect"],"sources":["/Users/tadashi_o/ゆうた/other/pagesTest/src/utils/EmojiRenderer.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport '../App.css';\nimport { Font } from '../components/FontButton';\n\n/**\n * プレビュー用canvas描画\n */\nexport async function getPng(text: string, font: Font, color: string, yOffset: number, borderColor: string, borderWidth: number): Promise<string> {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const canvas = document.createElement('canvas');\n      canvas.width = 128;\n      canvas.height = 128;\n\n      const textLine = text.split('\\n');\n      const fontSize = canvas.width / textLine.length;\n\n      const ctx = canvas.getContext('2d')!;\n      ctx.fillStyle = color;\n      ctx.strokeStyle = borderColor;\n      ctx.lineWidth = borderWidth;\n      ctx.lineJoin = 'round';\n      ctx.textBaseline = 'top';\n      ctx.font = `${fontSize}px '${font.name}', serif`;\n\n      // stroke\n      if (borderWidth > 0) {\n        textLine.forEach((line, i) => {\n          ctx.save();\n          //const lineWidth = ctx.measureText(line).width;\n          ctx.strokeText(line, canvas.width * 0.05, (fontSize * 0.9 * i) + fontSize * 0.05 + yOffset, canvas.width * 0.9);\n          ctx.restore();\n        });\n      }\n\n      // fill\n      textLine.forEach((line, i) => {\n        ctx.save();\n        ctx.fillText(line, canvas.width * 0.05, (fontSize * 0.92 * i) + fontSize * 0.05 + yOffset, canvas.width * 0.9);\n        ctx.restore();\n      });\n\n      resolve(canvas.toDataURL());\n    } catch (e) {\n      reject();\n    }\n  });\n}\n\n/**\n * Y軸オフセットを返す。\n * ブラウザによってy軸方向の描画がずれてるので計算する\n * @param canvas 絵文字が描画されたキャンバス\n * @returns Yオフセット\n */\nexport function getYOffset(font: Font): string {\n  try {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    \n    const ctx = canvas.getContext('2d')!;\n    ctx.textBaseline = 'top';\n    ctx.font = `128px '${font.name}', serif`;\n\n    // fill\n    ctx.fillText(\"F\", 0, 0);\n    const data = ctx.getImageData(0, 0, canvas.width, canvas.height).data;\n\n    for (var i = 0; i < data.length; i += 4) {\n      // データ4つでrgba 1px分\n      // 一番上の行から走査して最初に0以上の値が出てきたピクセルを確保\n      if (data[i] !== 0 || data[i + 1] !== 0 || data[i + 2] !== 0 || data[i + 3] !== 0) {\n        console.log(data[i], data[i + 1], data[i + 2], data[i + 3]);\n        break;\n      }\n    }\n    i++;\n\n    // 一番上の行を計算\n    const yOffset = Math.floor(canvas.width / Math.floor(i / 4));\n    console.log(yOffset);\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n\n    //return -yOffset;\n\n    return canvas.toDataURL();\n  } catch (e) {\n    throw e;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}